Summary of the day.

Task:
* Create an empty Nunit Test Project
* HttpClient Class - Provides a class for sending HTTP requests and receiving HTTP responses from a resource identified by a URI.   
** Create a basic structure - initialize the HttpClient in the preconditions and dispose of it in the after method.
* GET all users. - Assert the status code
* Create User model -> POCO.
* Create Request / Response model

Additional resources:
https://docs.nunit.org/articles/nunit/writing-tests/attributes.html

üîπ [TestFixture]
–ú–∞—Ä–∫–∏—Ä–∞ –∫–ª–∞—Å –∫–∞—Ç–æ —Ç–µ—Å—Ç–æ–≤ –∫–ª–∞—Å, –∫–æ–µ—Ç–æ –ø–æ–∑–≤–æ–ª—è–≤–∞ –Ω–∞ NUnit –¥–∞ –≥–æ —Ä–∞–∑–ø–æ–∑–Ω–∞–µ –∏ –∏–∑–ø—ä–ª–Ω–∏ —Ç–µ—Å—Ç–æ–≤–µ—Ç–µ –≤ –Ω–µ–≥–æ.

–ë–µ–∑ —Ç–æ–∑–∏ –∞—Ç—Ä–∏–±—É—Ç NUnit –Ω—è–º–∞ –¥–∞ –æ—Ç–∫—Ä–∏–µ —Ç–µ—Å—Ç–æ–≤–∏—Ç–µ –º–µ—Ç–æ–¥–∏ –≤ –∫–ª–∞—Å–∞.

üîπ [SetUp]
–ú–∞—Ä–∫–∏—Ä–∞ –º–µ—Ç–æ–¥, –∫–æ–π—Ç–æ —Å–µ –∏–∑–ø—ä–ª–Ω—è–≤–∞ –ø—Ä–µ–¥–∏ –≤—Å–µ–∫–∏ —Ç–µ—Å—Ç.

–ò–∑–ø–æ–ª–∑–≤–∞ —Å–µ –∑–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ HttpClient, –±–∞–∑–æ–≤–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –¥—Ä.
[SetUp]
public void Setup()
{
    _httpClient = new HttpClient();
}
üîπ [TearDown]
–ú–∞—Ä–∫–∏—Ä–∞ –º–µ—Ç–æ–¥, –∫–æ–π—Ç–æ —Å–µ –∏–∑–ø—ä–ª–Ω—è–≤–∞ —Å–ª–µ–¥ –≤—Å–µ–∫–∏ —Ç–µ—Å—Ç.

–ò–∑–ø–æ–ª–∑–≤–∞ —Å–µ –∑–∞ –æ—Å–≤–æ–±–æ–∂–¥–∞–≤–∞–Ω–µ –Ω–∞ —Ä–µ—Å—É—Ä—Å–∏, –∫–∞—Ç–æ –∑–∞—Ç–≤–∞—Ä—è–Ω–µ –Ω–∞ HttpClient.
[TearDown]
public void Teardown()
{
    _httpClient.Dispose();
}
üîπ [Test]
–ú–∞—Ä–∫–∏—Ä–∞ –º–µ—Ç–æ–¥ –∫–∞—Ç–æ —Ç–µ—Å—Ç–æ–≤ –º–µ—Ç–æ–¥.

NUnit —â–µ –≥–æ –∏–∑–ø—ä–ª–Ω–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ —Ç–µ—Å—Ç–æ–≤–µ—Ç–µ.
[Test]
public async Task GetUsers_ShouldReturnSuccess()
{
    HttpResponseMessage response = await _httpClient.GetAsync(BaseUrl);
    Assert.That(response.IsSuccessStatusCode, Is.True);
}
üîπ [TestCase]
–ü–æ–∑–≤–æ–ª—è–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–∏—Ä–∞–Ω–∏ —Ç–µ—Å—Ç–æ–≤–µ ‚Äì —Ç.–µ. –¥–∞ –∏–∑–ø—ä–ª–Ω—è–≤–∞–º–µ –µ–¥–∏–Ω –∏ —Å—ä—â —Ç–µ—Å—Ç —Å —Ä–∞–∑–ª–∏—á–Ω–∏ –≤—Ö–æ–¥–Ω–∏ –¥–∞–Ω–Ω–∏.

[TestCase(1)]
[TestCase(2)]
[TestCase(3)]
public async Task GetUserById_ShouldReturnSuccess(int userId)
{
    HttpResponseMessage response = await _httpClient.GetAsync($"{BaseUrl}/{userId}");
    Assert.That(response.IsSuccessStatusCode, Is.True);
}
üîπ [Ignore]
–ü—Ä–æ–ø—É—Å–∫–∞ –∏–∑–ø—ä–ª–Ω–µ–Ω–∏–µ—Ç–æ –Ω–∞ –¥–∞–¥–µ–Ω —Ç–µ—Å—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∞–∫–æ –µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ–Ω).

[Test]
[Ignore("This test is not ready yet.")]
public void IncompleteTest()
{
    Assert.Fail("Not implemented.");
}
üîπ [OneTimeSetUp]
–ò–∑–ø—ä–ª–Ω—è–≤–∞ —Å–µ —Å–∞–º–æ –≤–µ–¥–Ω—ä–∂ –ø—Ä–µ–¥–∏ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ—Ç–æ –Ω–∞ –≤—Å–∏—á–∫–∏ —Ç–µ—Å—Ç–æ–≤–µ –≤ –∫–ª–∞—Å–∞.

–ü–æ–¥—Ö–æ–¥—è—â–æ –∑–∞ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –æ–±—â–∏ —Ä–µ—Å—É—Ä—Å–∏.

[OneTimeSetUp]
public void OneTimeSetup()
{
    _httpClient = new HttpClient();
}
üîπ [OneTimeTearDown]
–ò–∑–ø—ä–ª–Ω—è–≤–∞ —Å–µ —Å–∞–º–æ –≤–µ–¥–Ω—ä–∂ —Å–ª–µ–¥ –∏–∑–ø—ä–ª–Ω–µ–Ω–∏–µ—Ç–æ –Ω–∞ –≤—Å–∏—á–∫–∏ —Ç–µ—Å—Ç–æ–≤–µ –≤ –∫–ª–∞—Å–∞.

–ü–æ–¥—Ö–æ–¥—è—â–æ –∑–∞ –æ—Å–≤–æ–±–æ–∂–¥–∞–≤–∞–Ω–µ –Ω–∞ —Ä–µ—Å—É—Ä—Å–∏.

[OneTimeTearDown]
public void OneTimeTeardown()
{
    _httpClient.Dispose();
}

üìå –ö–∞–∫–≤–æ —Å–∞ Asserts –≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–∞–Ω–æ—Ç–æ —Ç–µ—Å—Ç–≤–∞–Ω–µ?
Assertions (—Ç–≤—ä—Ä–¥–µ–Ω–∏—è) —Å–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏, –∫–æ–∏—Ç–æ –≤–∞–ª–∏–¥–∏—Ä–∞—Ç –¥–∞–ª–∏ –¥–∞–¥–µ–Ω–æ —É—Å–ª–æ–≤–∏–µ –µ –∏–∑–ø—ä–ª–Ω–µ–Ω–æ –ø–æ –≤—Ä–µ–º–µ –Ω–∞ —Ç–µ—Å—Ç–∞.
–ê–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞—Ç–∞ –Ω–µ —É—Å–ø–µ–µ, —Ç–µ—Å—Ç—ä—Ç —Å–µ —Å—á–∏—Ç–∞ –∑–∞ –Ω–µ—É—Å–ø–µ—à–µ–Ω (failed).

–ü—Ä–∏–º–µ—Ä:

–ê–∫–æ –ø–æ–ª—É—á–∏–º HTTP —Å—Ç–∞—Ç—É—Å 200 OK, —Ç–µ—Å—Ç—ä—Ç –µ —É—Å–ø–µ—à–µ–Ω.

–ê–∫–æ –ø–æ–ª—É—á–∏–º 500 Internal Server Error, —Ç–µ—Å—Ç—ä—Ç –ø—Ä–æ–≤–∞–ª—è —Ç–µ—Å—Ç–∞.

üìå –ö–∞–∫ —Å—Ç–∞–≤–∞ assert –≤ NUnit?
–í NUnit —Å–µ –∏–∑–ø–æ–ª–∑–≤–∞ Assert –∫–ª–∞—Å—ä—Ç, –∫–æ–π—Ç–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—è —Ä–∞–∑–ª–∏—á–Ω–∏ –º–µ—Ç–æ–¥–∏ –∑–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞.

‚úÖ –ü—Ä–∏–º–µ—Ä–Ω–∏ NUnit asserts
1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ true / false —É—Å–ª–æ–≤–∏—è:

Assert.That(5 > 3, Is.True);  // ‚úÖ –£—Å–ø–µ—Ö
Assert.That(5 < 3, Is.False); // ‚úÖ –£—Å–ø–µ—Ö
2Ô∏è‚É£ –°—Ä–∞–≤–Ω—è–≤–∞–Ω–µ –Ω–∞ —á–∏—Å–ª–∞ –∏ –æ–±–µ–∫—Ç–∏:

Assert.That(10, Is.EqualTo(10)); // ‚úÖ –£—Å–ø–µ—Ö
Assert.That("Hello", Is.Not.EqualTo("World")); // ‚úÖ –£—Å–ø–µ—Ö
3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ null / not null:

object obj = null;
Assert.That(obj, Is.Null); // ‚úÖ –£—Å–ø–µ—Ö

object obj2 = new object();
Assert.That(obj2, Is.Not.Null); // ‚úÖ –£—Å–ø–µ—Ö
4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–ª–µ–∫—Ü–∏–∏:

List<int> numbers = new List<int> { 1, 2, 3 };
Assert.That(numbers, Is.Not.Empty); // ‚úÖ –£—Å–ø–µ—Ö
Assert.That(numbers, Has.Member(2)); // ‚úÖ –£—Å–ø–µ—Ö (–ø—Ä–æ–≤–µ—Ä—è–≤–∞ –¥–∞–ª–∏ 2 —Å—ä—â–µ—Å—Ç–≤—É–≤–∞ –≤ —Å–ø–∏—Å—ä–∫–∞)

üìå –ö–∞–∫–≤–æ –µ POCO?
POCO (Plain Old CLR Object) –µ –æ–±–∏–∫–Ω–æ–≤–µ–Ω C# –∫–ª–∞—Å, –∫–æ–π—Ç–æ –Ω–µ –Ω–∞—Å–ª–µ–¥—è–≤–∞ –∏–ª–∏ –Ω–µ –∑–∞–≤–∏—Å–∏ –æ—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–∏ .NET —Ñ—Ä–µ–π–º—É—ä—Ä–∫ –∫–ª–∞—Å–æ–≤–µ. –ò–∑–ø–æ–ª–∑–≤–∞ —Å–µ –Ω–∞–π-—á–µ—Å—Ç–æ –∑–∞ –º–æ–¥–µ–ª–∏—Ä–∞–Ω–µ –Ω–∞ –¥–∞–Ω–Ω–∏.

üìå Serialization & Deserialization
Serialization ‚Äì –ø—Ä–æ—Ü–µ—Å—ä—Ç –Ω–∞ –ø—Ä–µ–æ–±—Ä–∞–∑—É–≤–∞–Ω–µ –Ω–∞ –æ–±–µ–∫—Ç –≤ JSON, XML –∏–ª–∏ –¥—Ä—É–≥ —Ñ–æ—Ä–º–∞—Ç –∑–∞ —Å—ä—Ö—Ä–∞–Ω–µ–Ω–∏–µ/–ø—Ä–µ–Ω–æ—Å.

Deserialization ‚Äì –ø—Ä–æ—Ü–µ—Å—ä—Ç –Ω–∞ –ø—Ä–µ–æ–±—Ä–∞–∑—É–≤–∞–Ω–µ –Ω–∞ JSON/XML –æ–±—Ä–∞—Ç–Ω–æ –≤ C# –æ–±–µ–∫—Ç.

üîπ –ö–∞–∫–≤–æ –µ CLR (Common Language Runtime)?
CLR (Common Language Runtime) –µ —Å—ä—Ä—Ü–µ—Ç–æ –Ω–∞ .NET —Å—Ä–µ–¥–∞—Ç–∞. –¢–æ–≤–∞ –µ –∏–∑–ø—ä–ª–Ω–∏—Ç–µ–ª–Ω–∞—Ç–∞ —Å—Ä–µ–¥–∞, –∫–æ—è—Ç–æ —É–ø—Ä–∞–≤–ª—è–≤–∞ –∏–∑–ø—ä–ª–Ω–µ–Ω–∏–µ—Ç–æ –Ω–∞ .NET –ø—Ä–æ–≥—Ä–∞–º–∏.
